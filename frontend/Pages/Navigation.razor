
@using frontend.Shared;
@using frontend.Config;
@page "/navigation"

@inject HttpClient _httpClient
@inject IToastService _toastService

<PageTitle>Home</PageTitle>

<div class="position-relative">
	<Card class="position-absolute top-0 end-0">
		<CardHeader>
			Information
		</CardHeader>
		<CardBody>
		<CardText>If you want to see the weekly deals hit the reload button!</CardText>
			<Button class="col-3 mx-auto mt-2"@ref="saveButton" Color="ButtonColor.Primary" Size="ButtonSize.ExtraLarge" @onclick="() => OnSaveClick((int)SupermarketName.Lidl)">
			<Icon Name="IconName.ArrowClockwise"></Icon>
		</Button>
		</CardBody>
	</Card>
</div>


@if (Flyers == null)
{
	<div class="text-center mt-4">
		<Spinner Color="SpinnerColor.Primary" Size="SpinnerSize.Large" />
		<p>Loading flyers...</p>
	</div>

}
else
{
	<div>
		<h1>Check out our special offer flyers!</h1>
	</div>
	@foreach(var supermarketGroup in Flyers.Where(f => f.PageIndex == 1).GroupBy(x => x.SupermarketID))
	{
		
		@switch (supermarketGroup.Key)
		{
			case "1":
				<a href="https://www.lidl.hu" class="supermarket_hyperlink" title="Visit Lidl's official site">
					<img src="images/Lidl_logo.png" alt="lidl_logo.png" class="supermarket_logo"/>
				</a>
				break;
			case "2":
				<a href="https://www.spar.hu" class="supermarket_hyperlink" title="Visit Spar's official site">
					<img src="images/spar_logo.svg" alt="spar_logo.png" class="supermarket_logo"/>
				</a>
				break;
		}
		<div class="flyer_wrapper">
			
			<div class="row">
				
				@foreach (FlyerModel flyer in supermarketGroup)
				{
					<div class=" col-md-3 mb-4">
						<CardGroup>
							<Card Class="mb-4" Style="width:12rem;">
								<img src="@flyer.ImageURL" alt="placeholder" class="card-img-top" />
								<CardBody>
									<CardText>@flyer.ActualDate</CardText>
								</CardBody>
							</Card>
						</CardGroup>
					</div>
				}
				
			</div>
			
		</div>
	}
}

@code {


	List<FlyerModel> Flyers;

	private Button saveButton = default!;


	protected override async Task OnInitializedAsync()
	{
		try
		{
			int supermarketCount = Enum.GetValues(typeof(SupermarketName)).Length;

			//Returns the enums data
			List<SupermarketName> id = Enum.GetValues(typeof(SupermarketName)).Cast<SupermarketName>().ToList();

			var flyerTask = id.Select(x => _httpClient.GetFromJsonAsync<List<FlyerModel>>($"https://localhost:5001/api/flyers/supermarketId?supermarketId={(int)x}")).ToList();

			var res = await Task.WhenAll(flyerTask);

			Flyers = res.Where(r => r != null)
						.SelectMany(list => list!)
						.OrderByDescending(x => DateHelper.ExtractDateFromFlyer(x))
						.ToList();
		} catch(Exception ex)
		{
			_toastService.ShowError($"Sudden error occured while loading pages! \n {ex.Message}");
		}



	}

	private async Task OnSaveClick(int supermarketId)
	{
		saveButton.ShowLoading("Loading...");
		try
		{
			var postresponse = await _httpClient.PostAsync($"https://localhost:5001/api/flyers/import?supermarketId={supermarketId}", null);
			if (postresponse is {StatusCode: System.Net.HttpStatusCode.OK})
			{
				var response = await _httpClient.GetAsync($"https://localhost:5001/api/flyers/supermarketId?supermarketId={supermarketId}");
				if (response.IsSuccessStatusCode)
				{
					var flyerData = await response.Content.ReadFromJsonAsync<List<FlyerModel>>();
					if (flyerData != null)
					{
						Flyers = flyerData.OrderByDescending(x => DateHelper.ExtractDateFromFlyer(x)).ToList();
						_toastService.ShowSuccess("Flyer images fetched successfully!");
					}
					else
					{
						_toastService.ShowError("Something went wrong! Contach the creator for help!");
					}

				}
				else
				{
					_toastService.ShowError("Server error! Try again later.");
				}
			} else if (postresponse is {StatusCode: System.Net.HttpStatusCode.Conflict })
			{
				_toastService.ShowInfo("The flyer is already up to date");
			}
			else
			{
				_toastService.ShowError("Server error! Is the server running?");
			}

			
			
		}catch(Exception ex)
		{
			_toastService.ShowError($"Check your internet connection or contact the developer! \n {ex.Message}");
		}
		saveButton.HideLoading();
		StateHasChanged();

	}
	

}

