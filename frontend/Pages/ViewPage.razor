@page "/flyer/{week}"
@using frontend.Shared
@inject HttpClient _httpClient

<div class="magazine-viewer" tabindex="0">
@if (Flyer == null)
{
	<div class="text-center mt-4">
		<Spinner Color="SpinnerColor.Primary" Size="SpinnerSize.Large" />
		<p>Loading flyers...</p>
	</div>
}
else
{
	<div class="pages-container" id="page">
	@foreach(FlyerModel image in Flyer)
	{
		<div class="page gap-3">
			<img src="@image.ImageURL" alt= "Page @image.PageIndex" loading="lazy"/>
		</div>
	}	
		</div>
}
</div>


@code {
	[Parameter] public string week{ get; set; }
	List<FlyerModel> Flyer;

	private int _currentIndex = 0;
	private bool isBig = false;

	protected override async Task OnInitializedAsync()
	{
		var response = await _httpClient.GetAsync($"api/flyers/ActualDate?actualDate={week}");
		if(response != null)
		{
			var flyerdata = await response.Content.ReadFromJsonAsync<List<FlyerModel>>();
			Flyer = flyerdata.Where(x => x != null)
					.OrderBy(x => x.PageIndex)
					.ToList();
		}
		else
		{

		}
	}
}
